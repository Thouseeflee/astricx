<% layout('./layout/boilerplate') %> 
<div class="container-fluid">
    <div class="row mb-3">
        <% console.log(currentUser) %> 
        <div class="col-12 offset-md-4 col-md-4 c">
            <h2 class="text-center"><%= Card.name %> </h2>
              <div class="card mt-3">
                <img src="<%= Card.image.url%> " class="" width="" alt="<%=Card.name%>">
                  <div class="card-body">
                    <p class="card-text mt-1 text-center"><%= Card.about %> </p>
                  </div>
                  <form class="card-subtitle mb-2 text-center" action="/<%=id%>/show/<%=Card._id%>/likes" method="GET">
                    <% if(currentUser) {%>  
                        <% if(Card.likes.some(function (like) {return like === currentUser.username})) {%> 
                        <i class="btn fas fa-star btn-like button liked" data=<%=Card._id%> data-1=<%=id%>  data-value="Liked"></i>                        
                        <span class="nLikes" data-l=<%= Card.likes.length %>></span>
                        <% } else { %> 
                          <i class="btn fas fa-star btn-like button unLiked"   data=<%=Card._id%> data-1=<%=id%>  data-value="Like"></i>  
                        <span class="nLikes" data-l=<%= Card.likes.length %>></span>
                          <% } %>     
                        <% } %>
                  </form>
                  
                  <div class="card-footer text-end">
                    <a href="/<%=Card.creator%>"> <img id="imgProfile" class="round" src="<%= Card.creatorProfile.profile%>" alt=""></a> 
                  </div>
      
                </div>

                <form action="/<%=id%>/show/<%=cardId%>/comments" method="POST">
                  <div class="comment-div">
                    <textarea name="comment" maxlength="150" class="form-control" id="com" cols="20" placeholder="Leave a Comment" rows="2"></textarea>
                  </div>
      <p>      
          <button  class="btn btn-success mt-2 submit" data-1=<%=id%> data-2=<%=cardId%> >Comment</button>
      </p>
      </form>

              </div>
        <% for(let Comment of comment) {%> 
          <div class="col-12 col-md-5 ">
            <div class="card comment mt-1 none" style="width: 100%;">
                <div class="card-body">
                  <div id="bor" class="bor">
                    <a href="/<%=Comment.user%> "><img class="round width" src="<%=Comment.creatorProfile.profile%> " alt=""><span class="card-title c-user"><%=Comment.user%></span>
                    </a>
                  </div>
                    <p class="card-text mt-3 commen"><%=Comment.comment%></p>
                    <div class="flex">
                      <form action="/cLikes/<%=Comment._id%>" method="GET">
                        <% if(currentUser && Comment.likes.some(function(like) {return like ===currentUser.username})) {%> 
                        <span class="btn btn-sm c-like lD ifLiked " data=<%=Comment._id%> data-likes=<%=Comment.likes.length%>  >Liked</span>
                        <span class="likesCounter"></span>
                  <% }else{ %> 
                    <span class="btn btn-sm c-like lD" data=<%=Comment._id%> data-likes=<%=Comment.likes.length%> >Like</span>
                        <span class="likesCounter"></span>
                        <% } %> 
                        </form>
                           <% if(currentUser.username === Comment.user) {%> 
                          <form action="/<%=id%>/show/<%=cardId%>/comments/<%=Comment._id%>?_method=DELETE" method="POST">
                            <span class="btn btn-sm delete lD" type="submit" data-1=<%=id%> data-2=<%=cardId%> data-3=<%=Comment._id%> >
                              Delete</span>
                            </form>
                            <% } %> 
                          </div>
                </div>
              </div>
            </div>
            <% } %> 
    </div>
</div>
<script src="/javascript/likes.js"></script>

<script>
    const deleted =document.querySelectorAll('.delete');
    const display =document.querySelectorAll('.none');
    const submit =document.querySelector('.submit');
    const btns =document.querySelectorAll('.button')
    const inp=document.querySelector("div.comment-div textarea[name='comment']");
    const comment =document.querySelectorAll('.commen')
    const submitP=document.querySelector('.c')
    const cLike=document.querySelectorAll('.c-like')
    const likesCounter =document.querySelectorAll(".likesCounter")

    submit.addEventListener('click', async function(e) {
      e.preventDefault();
        const id =this.getAttribute('data-1')
        const cardId =this.getAttribute('data-2')
          axios({
          method: 'post',
          url: `/${id}/show/${cardId}/comments`,
          data: {
            comment: inp.value
          }
        })
        .then(function (res) {
         const profileUrl = res.data.pic
         const User = res.data.info.user
         const comment = res.data.info.comment
         const titleId = res.data.info.title
         const cardId = res.data.info.card
         const id = res.data.info._id
         const row = document.createElement('div')
         const main = document.createElement('div')
         const card = document.createElement('div')
         const body = document.createElement('div');
         const border = document.createElement('div');
         main.classList = 'col-12 col-md-5'
         body.classList = 'card-body'
          const a =document.createElement('a');
          const profile =document.createElement('img');
          profile.src= `${profileUrl}`;
          profile.id = "imgProfile"
          profile.classList = "round width"
          const userSpan = document.createElement('span');
          userSpan.classList = "card-title c-user"
          userSpan.innerText = `${User}`
          a.appendChild(profile);
          a.href = `/${User}`
          a.appendChild(userSpan)
          border.appendChild(a)
          border.id = "bor"
          body.appendChild(border)
          const commentP =document.createElement('p')
          commentP.classList = "card-text mt-3 commen"
          commentP.innerText = `${comment}`
          const divFlex =document.createElement('div');
          divFlex.classList = "flex"
          const formLike =document.createElement('form')
          formLike.action = `/${titleId}/show/${cardId}/likes/${id}`
          formLike.method = "GET"
          const btnLike =document.createElement('span')
          btnLike.classList = "btn btn-sm newLike"
          btnLike.setAttribute('data', `${id}`)
          btnLike.innerText = "Like"
          const likesCount =document.createElement('span')
          likesCount.classList ="likeCount"
          likesCount.innerText = 0
          const formDelete =document.createElement('form')
          formDelete.action = `/${titleId}/show/${cardId}/comments/${id}?_method=DELETE`
          formDelete.method = "POST"
          const btnDelete =document.createElement('span')
          btnDelete.classList = "btn btn-sm newDelete"
          btnDelete.setAttribute('type', "submit")
          btnDelete.setAttribute('data-1', titleId)
          btnDelete.setAttribute('data-2', cardId)
          btnDelete.setAttribute('data-3', id)
          btnDelete.innerText = " Delete"
          formLike.appendChild(btnLike);
          formLike.appendChild(likesCount)
          formDelete.appendChild(btnDelete);
          divFlex.appendChild(formLike);
          divFlex.appendChild(formDelete)
          body.appendChild(commentP)
          body.appendChild(divFlex)
          card.classList = "card comment mt-1 none fade-in"
          card.style = "width:100%;"
          card.appendChild(body);
          main.appendChild(card)
          submitP.after(main)
          inp.value = "";
        const remove = document.querySelector('.newDelete');

        remove.addEventListener('click', async function (e) {
          e.preventDefault();
          this.parentElement.parentElement.parentElement.parentElement.classList = "display"
        const id =this.getAttribute('data-1')
        const cardId =this.getAttribute('data-2')
        const cId =this.getAttribute('data-3')
        await axios.delete(`/${id}/show/${cardId}/comments/${cId}`)
        })
        const newLike = document.querySelector('.newLike')
        newLike.addEventListener('click', async function (e) {
        let likesCounter = this.nextElementSibling;
        const cId = this.getAttribute('data');
        if(this.textContent === "Liked"){
          this.textContent ="Like"
          this.classList = "btn btn-sm"
          this.style = ""
        }else if(this.textContent === "Like"){
          this.textContent = "Liked"
          this.classList = "btn btn-sm"
          this.style = "color: green"
        }

        await axios.get(`/cLikes/${cId}`)
        .then(function (res) {
          const total = res.data.totalLikes;
          likesCounter.innerText = abbrNum(total, 1)
        })
        .catch(function (e) {
          console.log(e);
        })
      })


        })
        .catch(function (e) {
          console.log(e);
        })

      

    })
    
    for(let like of cLike){
      let likes = like.nextElementSibling
      const dataL =like.getAttribute('data-likes')
      likes.innerText = abbrNum(dataL,1)
      like.addEventListener('click', async function (e) {
        let likesCounter = this.nextElementSibling;
        const cId = this.getAttribute('data');
        if(this.textContent === "Liked"){
          this.textContent ="Like"
          this.style = ""
        }else if(this.textContent === "Like"){
          this.textContent = "Liked"
          this.style = "color: green"
        }
        await axios.get(`/cLikes/${cId}`)
        .then(function (res) {
          const total = res.data.totalLikes;
          likesCounter.innerText = abbrNum(total, 1)
        })
        .catch(function (e) {
          console.log(e);
        })
      })
    }

 for(let btn of btns){
  

  btn.addEventListener('click', function(e){
    e.preventDefault();
    if(btn.classList.length < 7){
    const likeCounterSpan = this.nextElementSibling;
       if(this.getAttribute("data-value") === "Liked") {
          this.setAttribute("data-value", "Like")
         this.classList = "btn fas fa-star btn-like unLiked"
   }else if(this.getAttribute("data-value") ==="Like") {
         this.setAttribute("data-value", "Liked")
         this.classList = "btn fas fa-star btn-like liked"
   }

    const card_id = this.getAttribute("data")
    const title_id = this.getAttribute("data-1")
    axios.get(`/${title_id}/show/${card_id}/likes`)
    .then(function(res) {
      const data = res.data.totalLikes;
      likeCounterSpan.innerText = abbrNum(data,1);

    })
    .catch(function (e) {
      console.log(e);
    })
   } else{
     alert('Please Login or signup')
   }
  })
 }
 const n =document.querySelectorAll('.nLikes')
for(let nl of n){
    const likeValue= nl.getAttribute('data-l')
    nl.innerText = abbrNum(likeValue,1)
  }
 for(let deletes of deleted){
deletes.addEventListener('click', async function(e){
    e.preventDefault();

    this.parentElement.parentElement.parentElement.parentElement.classList = "display"
    const id =this.getAttribute('data-1')
    const cardId =this.getAttribute('data-2')
    const cId =this.getAttribute('data-3')
    await axios.delete(`/${id}/show/${cardId}/comments/${cId}`)
})
}
</script>